---
import { SITE, LINKS } from "@consts"
import { cn } from "@lib/utils"
const { pathname } = Astro.url
const subpath = pathname.match(/[^/]+/g)
import Container from "@components/Container.astro"
import  SpeedInsights  from "@vercel/speed-insights/astro"
---

<header id="header" class="fixed top-0 w-full h-16 z-50 ">
  <SpeedInsights/>
  <Container size="md">
    <div class="relative h-full w-full">
      <div class="absolute left-0 top-1/2 -translate-y-1/2 flex gap-1 font-semibold">
        <a href="/" class="flex gap-1 text-current hover:text-black dark:hover:text-white transition-colors duration-300 ease-in-out">
          <img src="/assets/svg/favicon.svg">
          <div class="text-align: justify">
            {SITE.TITLE}
          </div>
        </a>
      </div>
    <div class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
      <nav class="hidden md:flex items-center justify-center text-sm gap-1">
        {
          LINKS.map((LINK) => (
            <div class="relative group">
              <a href={LINK.HREF} class={cn("h-8 rounded-full px-3 text-current", "flex items-center justify-center", "transition-colors duration-300 ease-in-out", pathname === LINK.HREF || "/" + subpath?.[0] === LINK.HREF ? "bg-black dark:bg-white text-white dark:text-black" : "hover:bg-black/5 dark:hover:bg-white/20 hover:text-black dark:hover:text-white")}>
                {LINK.TEXT}
              </a>
              {LINK.SUBLINKS && (
                <div class="absolute left-0 top-full mt-1 hidden group-hover:block bg-white dark:bg-gray-800 rounded shadow-lg">
                  {
                    LINK.SUBLINKS.map((SUBLINK) => (
                      <a href={SUBLINK.HREF} class="block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">
                        {SUBLINK.TEXT}
                      </a>
                    ))
                  }
                </div>
              )}
            </div>
          ))
        }
      </nav>
    </div>

    <div class="buttons absolute right-0 top-1/2 -translate-y-1/2 flex gap-1">
      <a href="/search" aria-label={`Buscar en ${SITE.TITLE}`} class={cn("hidden md:flex", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out", pathname === "/search" || "/" + subpath?.[0] === "/search" ? "pointer-events-none bg-black dark:bg-white text-white dark:text-black" : "")}>
        <svg class="size-full">
          <use href="/assets/svg/ui.svg#search"></use>
        </svg>
      </a>

      <button id="header-theme-button" aria-label={`Cambiar a tema claro`} class={cn("hidden md:flex", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out")}>
        <svg class="size-full block dark:hidden">
          <use href="/assets/svg/ui.svg#sun"></use>
        </svg>
        <svg class="size-full hidden dark:block">
          <use href="/assets/svg/ui.svg#moon"></use>
        </svg>
      </button>
      
      <a aria-label={`Ver en Github`} class={cn("hidden md:flex", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out")} target="_blank" href="https://github.com/BrosLunas/broslunas-astro">
        <img src="/assets/svg/github-white.svg"/>
      </a>

      <button id="header-drawer-button" aria-label={`Cambiar a tema oscuro`} class={cn("flex md:hidden", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out")}>
        <svg id="drawer-open" class="size-full">
          <use href="/assets/svg/ui.svg#menu"></use>
        </svg>
        <svg id="drawer-close" class="size-full">
          <use href="/assets/svg/ui.svg#x"></use>
        </svg>
      </button>
    </div>
  </div>
  </Container>
</header>

<style>
  #header-drawer-button > #drawer-open {
    @apply block;
  }

  #header-drawer-button > #drawer-close {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-open {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-close {
    @apply block;
  }

  .group-hover\:block:hover > .hidden {
    display: block;
  }
  

  #header nav a:hover {
    color: #ffffff;
    background-color: rgba(255, 255, 255, 0.2);
  }

  /* Menú desplegable */
  #header nav .group:hover .hidden {
    display: block;
  }

  #header nav .group div {
    display: none;
    position: absolute;
    background-color: rgba(30, 30, 30, 0.95);
    border-radius: 8px;
    padding: 10px 0;
    margin-top: 8px;
    min-width: 160px;
    z-index: 1000;
  }

  #header nav .group div a {
    display: block;
    padding: 8px 20px;
    color: #ffffff;
    text-decoration: none;
    font-size: 14px;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  #header nav .group div a:hover {
    background-color: #1a1a1a;
  }

  /* Botones en la derecha del header */
  .buttons a, .buttons button {
    background-color: rgba(255, 255, 255, 0.1);
    color: #ffffff;
    border-radius: 50%;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  .buttons a:hover, .buttons button:hover {
    background-color: rgba(31, 31, 31, 0.2);
  }

  .buttons a img, .buttons button svg {
    filter: brightness(0) invert(1);
  }

  /* Drawer (para dispositivos móviles) */
  #header-drawer-button.open > svg#drawer-open {
    display: none;
  }

  #header-drawer-button.open > svg#drawer-close {
    display: block;
  }

  /* Modificaciones adicionales */
  #header-drawer-button > svg#drawer-close {
    display: none;
  }
</style>

<script is:inline>
  function toggleDrawer() {
    const drawer = document.getElementById("drawer")
    const drawerButton = document.getElementById("header-drawer-button")
    drawer?.classList.toggle("open")
    drawerButton?.classList.toggle("open")
  }

  function initializeDrawerButton() {
    const drawerButton = document.getElementById("header-drawer-button")
    drawerButton?.addEventListener("click", toggleDrawer)
  }

  document.addEventListener("astro:after-swap", initializeDrawerButton)
  initializeDrawerButton()
</script>
